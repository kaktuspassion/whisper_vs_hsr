describe(data)
rm(list = ls())
# Libraries
library(dplyr) # for data wrangling (standardization)
library(ggplot2) # for data visualization
library(dlookr) # a lot of EDA functions
## 1. Loading data
data <- read.csv("duration.csv", sep = "\t")
summary(data)
describe(data)
## 1. Loading data
data <- read.csv("Transcriptions.csv", sep = "\t")
## 1. Loading data
data <- read.csv("./Transcriptions.csv", sep = "\t")
setwd("~/Desktop/ASP_project")
## 1. Loading data
data <- read.csv("Transcriptions.csv", sep = "\t")
summary(data)
## 1. Loading data
data <- read.csv("Transcriptions.csv")
summary(data)
## 1. Loading data
data <- read.csv("CSV_Results.csv")
## 1. Loading data
data <- read.csv("CER_Results.csv")
summary(data)
describe(data)
View(data)
plot1 <- ggplot(data = data, mapping = aes(x = WHISPER)) +
geom_histogram(binwidth = 0.1)
plot2 <- ggplot(data = data, mapping = aes(x = Mean.Participants)) +
geom_histogram(binwidth = 0.1)
plot_grid(plot1, plot2, nrow = 1, ncol = 2)
library(cowplot) # for grid plotting
plot_grid(plot1, plot2, nrow = 1, ncol = 2)
# 3.2 variable normalization
# normality diagnosis plot for 2 features
plot_normality(data, WHISPER)
plot_normality(data, Mean.Participants)
plot_grid(plot1, plot2, nrow = 1, ncol = 2)
# evaluate normality using Shapiro-Wilk test on original data
shapiro.test(train$nPVI_C_tier1)
# evaluate normality using Shapiro-Wilk test on original data
shapiro.test(data$WHISPER)
shapiro.test(data$Mean.Participants)
## 1. Data in two numerical vectors
# Correctness of experiment group before the familarity practive
before_E <- c(0.65, 0.50, 0.70, 0.75, 0.60, 0.55)
# Correctness of experiment group after the familarity practive
after_E <- c(0.60, 0.80, 0.85, 0.85, 0.80, 0.75)
# Create a data frame for experiment group
data_E <- data.frame(group = rep(c("before_E", "after_E"), each = 6),
correctness = c(before_E, after_E)
)
# Check the data
print(data_E)
# Correctness of control group before the familarity practive
before_C <- c(0.65, 0.80, 0.90, 0.55, 0.60, 0.80)
# Correctness of control group after the familarity practive
after_C <- c(0.65, 0.65, 0.80, 0.75, 0.70, 0.60)
# Create a data frame for experiment group
data_C <- data.frame(group = rep(c("before_C", "after_C"), each = 6),
correctness = c(before_C, after_C)
)
# Check the data
print(data_C)
# Compute summary statistics of experimental group
group_by(data_E, group) %>%
summarise(
count = n(),
mean = mean(correctness, na.rm = TRUE),
sd = sd(correctness, na.rm = TRUE)
)
# Compute summary statistics of control group
group_by(data_C, group) %>%
summarise(
count = n(),
mean = mean(correctness, na.rm = TRUE),
sd = sd(correctness, na.rm = TRUE)
)
View(data_E)
# Compute summary statistics of experimental group
group_by(data) %>%
summarise(
count = n(),
mean = mean(WHISPER, na.rm = TRUE),
sd = sd(WHISPER, na.rm = TRUE)
)
# Compute summary statistics of control group
group_by(data) %>%
summarise(
count = n(),
mean = mean(Mean.Participants, na.rm = TRUE),
sd = sd(Mean.Participants, na.rm = TRUE)
)
## 3. Visualize data in boxplot and paried data plot
install.packages("ggpubr")
library(ggpubr)
library(ggplot2)
# 3.1 Experiment Group
ggpaired(data_E, x = "group", y = "correctness",
color = "group", line.color = "gray", line.size = 0.4,
palette = "jco")
View(data)
